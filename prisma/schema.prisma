// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])

  @@map("sessions")
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  name          String?
  email         String?   @unique
  password      String?
  emailVerified DateTime? @map("email_verified")
  accounts      Account[]
  sessions      Session[]
  orders        Order[]

  @@map("users")
}

model Product {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  name      String
  price     Int
  slug      String   @unique
  image     String
  gender    Gender
  category  String
  quantity  Int

  @@map("products")
}

model Section {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  title     String
  image     String
  slug      String
  size      String?

  @@map("sections")
}

model Order {
  id             String      @id @default(auto()) @map("_id") @db.ObjectId
  createdAt      DateTime    @default(now()) @map("created_at")
  updatedAt      DateTime    @updatedAt @map("updated_at")
  userId         String      @map("user_id")
  user           User        @relation(fields: [userId], references: [id])
  items          OrderItem[]
  amount         Float
  shippingAmount Float?      @map("shipping_amount")
  images         String[]
  address        Address
  phone          String?
}

type OrderItem {
  id       String @map("_id") @db.ObjectId
  name     String
  price    Int
  image    String
  quantity Int
  slug     String
}

type Address {
  street  String
  city    String
  zip     String
  country String
  state   String
}

enum Gender {
  Men
  Women
}
